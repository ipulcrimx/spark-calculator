{"version":3,"sources":["logo.svg","serviceWorker.js","components/InputForm.js","components/Chart.js","components/Graph.js","App.js","components/NavBar.js","components/Hightlight.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","InputForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","crystal","ticket","tenDrawTicket","react_default","a","createElement","Form","className","Group","as","Label","column","Control","size","type","placeholder","Button","variant","event","target","name","setState","defineProperty","value","console","log","Component","Chart","dataPie","labels","datasets","data","backgroundColor","hoverBackgroundColor","mdbreact_esm","es","option","responsive","Graph","dataLine","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","App","Container","fluid","Row","Col","md","components_InputForm","xl","components_Graph","components_Chart","NavBar","Navbar","bg","expand","Brand","href","src","logo","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Hightlight","Hightlight_CrystalHolder","Hightlight_TicketHolder","Hightlight_TenDrawTicket","Hightlight_TotalDrawHolder","CrystalHolder","TicketHolder","TenDrawTicket","TotalDrawHolder","ReactDOM","render","components_NavBar","document","getElementById","components_Hightlight","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.890bb6bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport {Form, Col, Button} from 'react-bootstrap';\r\nimport '../css/components.css';\r\n\r\nclass InputForm extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = \r\n        {\r\n            crystal: 0,\r\n            ticket: 0,\r\n            tenDrawTicket: 0\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Form className=\"input-form\">\r\n                <Form.Group as={\"Row\"}>\r\n                    <Form.Label as=\"Legend\" column>\r\n                        Update Type:\r\n                    </Form.Label>\r\n                    <Form.Control size=\"sm\" as=\"select\">\r\n                        <option>Status Update</option>\r\n                        <option>Save Up</option>\r\n                        <option>Chucked</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group>\r\n                    <Form.Label>Crystal</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"number\" placeholder=\"ex: 300\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Tickets</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"number\" placeholder=\"ex: 10\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Ten Draw Ticket</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"number\" placeholder=\"ex: 1\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        );\r\n    }\r\n    \r\n\r\n    onValueChange(event)\r\n    {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: target.value\r\n        });\r\n    }\r\n\r\n    onSubmitClicked()\r\n    {\r\n        console.log(this.state);\r\n    }\r\n}\r\n\r\n\r\nexport default InputForm;","import React, { Component } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {MDBContainer} from 'mdbreact';\r\n\r\nclass Chart extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = \r\n        {\r\n            dataPie: \r\n            {\r\n                labels: [\"Crystal\", \"Ticket\", \"Ten Draw Tickets\"],\r\n                datasets: \r\n                [\r\n                    {\r\n                        data: [170, 56, 10],\r\n                        backgroundColor: \r\n                        [\r\n                            \"#F7464A\",\r\n                            \"#46BFBD\",\r\n                            \"#FDB45C\"\r\n                        ],\r\n                        hoverBackgroundColor: \r\n                        [\r\n                            \"#FF5A5E\",\r\n                            \"#5AD3D1\",\r\n                            \"#FFC870\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <MDBContainer>\r\n                <h5 className=\"mt-5\">Draw Chart</h5>\r\n                <Pie data={this.state.dataPie} option={{ responsive: true}} />\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chart;","import React, { Component } from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {MDBContainer} from 'mdbreact';\r\n\r\nclass Graph extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        \r\n        this.state = \r\n        {\r\n            dataLine: \r\n            {\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n                datasets: \r\n                [\r\n                    {\r\n                        label: \"My First dataset\",\r\n                        fill: false,\r\n                        lineTension: 0.1,\r\n                        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                        borderColor: \"rgba(75,192,192,1)\",\r\n                        borderCapStyle: \"butt\",\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: \"miter\",\r\n                        pointBorderColor: \"rgba(75,192,192,1)\",\r\n                        pointBackgroundColor: \"#fff\",\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 1,\r\n                        pointHitRadius: 10,\r\n                        data: [65, 59, 80, 81, 56, 55, 40]\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n          <MDBContainer>\r\n            <Line data={this.state.dataLine} options={{ responsive: true }} />\r\n          </MDBContainer>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Graph;","import React, { Component } from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nimport InputForm from './components/InputForm';\nimport Chart from './components/Chart';\nimport Graph from './components/Graph'\nimport './App.css';\n\nclass App extends Component \n{\n    render()\n    {\n        return (\n            <div className=\"main-content\">\n                <Container fluid=\"true\">\n                    <Row>\n                        <Col md={3}>\n                            <div className=\"side-div\">\n                                <InputForm />\n                            </div>\n                        </Col>\n                        <Col md={6}>\n                            <Row className=\"dummy-white\">\n                                <Col xl={8}>\n                                    <h2>Spark Calculator</h2>\n                                </Col>\n                                <Col xl={8} className=\"graph\">\n                                    <Graph />\n                                </Col>\n                                <Col xl={8} className=\"graph\">\n                                    <Chart />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md={3}>\n                            <div className=\"side-div\">\n                                <p>\n                                    This will be notification div\n                                </p>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { Navbar, Nav}from 'react-bootstrap';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nclass NavBar extends Component \r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Navbar.Brand href=\"#home\"><img src={logo} alt=\"logo\" className=\"Logo-Navbar\"/>React-Bootstrap</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#home\">Home</Nav.Link>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n          </Navbar>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport {Container, Row, Col } from 'react-bootstrap';\r\nimport '../css/components.css';\r\n\r\nclass Hightlight extends Component \r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <Container fluid=\"true\" className=\"Hightlight-Holder clearfix\">\r\n                <Row>\r\n                    <Col md={3}><CrystalHolder /></Col>\r\n                    <Col md={3}><TicketHolder /></Col>\r\n                    <Col md={3}><TenDrawTicket /></Col>\r\n                    <Col md={3}><TotalDrawHolder /></Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst CrystalHolder = ()=>\r\n<div className=\"HightComponent\">\r\n    <span className=\"hightlight-icon\">\r\n    {\r\n        // image here...\r\n    }\r\n    </span>\r\n    <span className=\"hightlight-info\">\r\n        <span>300</span>\r\n        <div>Total Crystal</div>\r\n    </span>\r\n</div>\r\n\r\nconst TicketHolder = ()=>\r\n<div className=\"HightComponent\">\r\n    <span className=\"hightlight-icon\">\r\n    {\r\n        // image here...\r\n    }\r\n    </span>\r\n    <span className=\"hightlight-info\">\r\n        <span>10</span>\r\n        <div>Tickets</div>\r\n    </span>\r\n</div>\r\n\r\nconst TenDrawTicket = ()=>\r\n<div className=\"HightComponent\">\r\n    <span className=\"hightlight-icon\">\r\n    {\r\n        // image here...\r\n    }\r\n    </span>\r\n    <span className=\"hightlight-info\">\r\n        <span>1</span>\r\n        <div>Ten Draw Tickets</div>\r\n    </span>\r\n</div>\r\n\r\nconst TotalDrawHolder = ()=>\r\n<div className=\"HightComponent\">\r\n    <span className=\"hightlight-icon\">\r\n    {\r\n        // image here...\r\n    }\r\n    </span>\r\n    <span className=\"hightlight-info\">\r\n        <span>21</span>\r\n        <div>Total Draws</div>\r\n    </span>\r\n</div>\r\n\r\nexport default Hightlight;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport NavBar from './components/NavBar';\nimport Hightlight from './components/Hightlight';\n\nReactDOM.render(<NavBar />, document.getElementById('navigation'));\nReactDOM.render(<Hightlight />, document.getElementById('hightlight'));\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}